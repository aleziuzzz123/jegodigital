# FINAL FIRESTORE RULES - COMPREHENSIVE FIX
# Copy and paste these rules in Firebase Console > Firestore > Rules
# These rules provide proper access for both admin and client users

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function signed()   { return request.auth != null; }
    function admin()    { return signed() && request.auth.token.role == 'admin'; }
    function client()   { return signed() && request.auth.token.role == 'client'; }

    // Public catalog needed by client dashboard
    match /products/{id} { 
      allow read: if client() || admin(); 
      allow write: if admin(); 
    }
    
    match /bundles/{id}  { 
      allow read: if client() || admin(); 
      allow write: if admin(); 
    }

    // Client-owned data
    match /clients/{uid} {
      allow read, write: if admin() || (client() && request.auth.uid == uid);
    }

    match /projects/{pid} {
      allow read, write: if admin() || (client() && resource.data.clientId == request.auth.uid);
    }

    // Admin-only collections
    match /team/{id} { 
      allow read, write: if admin(); 
    }
    
    match /payments/{id} {
      allow read, write: if admin();
    }
    
    match /support_tickets/{id} {
      allow read, write: if admin();
    }
    
    match /reports/{id} {
      allow read, write: if admin();
    }

    // Default deny all other documents
    match /{document=**} { 
      allow read, write: if false; 
    }
  }
}

# TO SET CUSTOM CLAIMS (run this in your backend):
# await auth.setCustomUserClaims(uid, { role: 'client' });
# await auth.setCustomUserClaims(uid, { role: 'admin' });

# TO REFRESH TOKEN ON CLIENT (after setting claims):
# await auth.currentUser?.getIdToken(true);

# DIRECT LINKS:
# Firebase Console: https://console.firebase.google.com/u/6/project/jegodigital-2ed98/firestore/rules
# Test Page: https://jegodigital.com/test-comprehensive-fix.html
